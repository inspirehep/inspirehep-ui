// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AuthorList renders all authors if they are less than the limit wihtout "show all." 1`] = `
<React.Fragment>
  <InlineList
    extractKey={[Function]}
    items={
      Immutable.List [
        Immutable.Map {
          full_name: "Test, Guy 1",
        },
        Immutable.Map {
          full_name: "Test, Guy 2",
        },
      ]
    }
    label={null}
    renderItem={[Function]}
    separateItems={true}
    suffix={null}
    wrapperClassName={null}
  />
  <Modal
    confirmLoading={false}
    footer={null}
    maskTransitionName="fade"
    okType="primary"
    onCancel={[Function]}
    prefixCls="ant-modal"
    title="2 authors"
    transitionName="zoom"
    visible={false}
    width="50%"
  >
    <InlineList
      extractKey={[Function]}
      items={
        Immutable.List [
          Immutable.Map {
            full_name: "Test, Guy 1",
          },
          Immutable.Map {
            full_name: "Test, Guy 2",
          },
        ]
      }
      label={null}
      renderItem={[Function]}
      separateItems={true}
      suffix={null}
      wrapperClassName={null}
    />
  </Modal>
</React.Fragment>
`;

exports[`AuthorList renders only 5 authors and suffixes "show all" if passed more 1`] = `
<React.Fragment>
  <InlineList
    extractKey={[Function]}
    items={
      Immutable.List [
        Immutable.Map {
          full_name: "Test, Guy 1",
        },
        Immutable.Map {
          full_name: "Test, Guy 2",
        },
        Immutable.Map {
          full_name: "Test, Guy 3",
        },
        Immutable.Map {
          full_name: "Test, Guy 4",
        },
        Immutable.Map {
          full_name: "Test, Guy 5",
        },
      ]
    }
    label={null}
    renderItem={[Function]}
    separateItems={true}
    suffix={
      <div
        className="di"
      >
        <a
          onClick={[Function]}
        >
           Show all
        </a>
      </div>
    }
    wrapperClassName={null}
  />
  <Modal
    confirmLoading={false}
    footer={null}
    maskTransitionName="fade"
    okType="primary"
    onCancel={[Function]}
    prefixCls="ant-modal"
    title="6 authors"
    transitionName="zoom"
    visible={false}
    width="50%"
  >
    <InlineList
      extractKey={[Function]}
      items={
        Immutable.List [
          Immutable.Map {
            full_name: "Test, Guy 1",
          },
          Immutable.Map {
            full_name: "Test, Guy 2",
          },
          Immutable.Map {
            full_name: "Test, Guy 3",
          },
          Immutable.Map {
            full_name: "Test, Guy 4",
          },
          Immutable.Map {
            full_name: "Test, Guy 5",
          },
        ]
      }
      label={null}
      renderItem={[Function]}
      separateItems={true}
      suffix={null}
      wrapperClassName={null}
    />
  </Modal>
</React.Fragment>
`;

exports[`AuthorList renders only limited (prop) authors and suffixes "show all" if passed more 1`] = `
<React.Fragment>
  <InlineList
    extractKey={[Function]}
    items={
      Immutable.List [
        Immutable.Map {
          full_name: "Test, Guy 1",
        },
        Immutable.Map {
          full_name: "Test, Guy 2",
        },
      ]
    }
    label={null}
    renderItem={[Function]}
    separateItems={true}
    suffix={
      <div
        className="di"
      >
        <a
          onClick={[Function]}
        >
           Show all
        </a>
      </div>
    }
    wrapperClassName={null}
  />
  <Modal
    confirmLoading={false}
    footer={null}
    maskTransitionName="fade"
    okType="primary"
    onCancel={[Function]}
    prefixCls="ant-modal"
    title="3 authors"
    transitionName="zoom"
    visible={false}
    width="50%"
  >
    <InlineList
      extractKey={[Function]}
      items={
        Immutable.List [
          Immutable.Map {
            full_name: "Test, Guy 1",
          },
          Immutable.Map {
            full_name: "Test, Guy 2",
          },
        ]
      }
      label={null}
      renderItem={[Function]}
      separateItems={true}
      suffix={null}
      wrapperClassName={null}
    />
  </Modal>
</React.Fragment>
`;
